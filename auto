def tool_main(logfun):
    global running, MODE_AUTO
    logfun("üöÄ....")
    while running:
        order = detect_arrow_order()
        if order:
            logfun(f"üîç Detected: {' '.join(order)}")
            auto_press_arrows(order, logfun)
            logfun(f"‚è±Ô∏è settings {SPACE_DELAY} SPACE...")
            for _ in range(int(SPACE_DELAY * 10)):
                if not running: return
                time.sleep(0.1)
            keyboard.press_and_release("space")
            logfun("‚è±Ô∏è Pressed: SPACE")
            # T√ôY MODE: S·∫¶U RI√äNG/M·∫¨T ONG => countdown kh√°c nhau
            if MODE_AUTO == "matong":
                countdown = 10.5
            else:
                countdown = 8.5
            logfun(f"‚è±Ô∏è settings {countdown} ...")
            for _ in range(int(countdown * 10)):
                if not running: return
                time.sleep(0.1)
            keyboard.press('alt')
            logfun("‚è±Ô∏è settings")
            time.sleep(0.15)
            pyautogui.click()
            logfun("üñ±Ô∏è Click")
            time.sleep(0.1)
            x, y = pyautogui.position()
            pyautogui.mouseDown(button='left')
            pyautogui.moveTo(x + 0, y, duration=0.12)
            pyautogui.mouseUp(button='left')
            logfun("‚Üó1px")
            time.sleep(0.1)
            pyautogui.click()
            logfun("üñ±Ô∏è Click")
            keyboard.release('alt')
            logfun("üîÑ restart..")
            continue
        else:
            time.sleep(0.1)
    logfun("‚õî....")
tool_main(logfun)
